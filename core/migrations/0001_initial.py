# Generated by Django 4.0.4 on 2022-06-17 11:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GeoPlaces',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.CharField(default=None, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(default=None, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Trend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='lorem ipsum', max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255)),
                ('volume', models.PositiveIntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('as_of', models.DateTimeField(auto_now_add=True)),
                ('is_user_trend', models.IntegerField(default=0)),
                ('is_active', models.IntegerField(default=1)),
                ('geoplaces', models.ManyToManyField(blank=True, related_name='trend', to='core.geoplaces')),
                ('locations', models.ManyToManyField(blank=True, related_name='trend', to='core.location')),
                ('topics', models.ManyToManyField(blank=True, related_name='trend', to='core.topic')),
            ],
        ),
        migrations.CreateModel(
            name='Tweet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=280)),
                ('tid', models.BigIntegerField(blank=True, null=True)),
                ('like_count', models.BigIntegerField(blank=True, null=True)),
                ('retweet_count', models.BigIntegerField(blank=True, null=True)),
                ('reply_count', models.BigIntegerField(blank=True, null=True)),
                ('source', models.CharField(blank=True, max_length=255)),
                ('user_followers', models.IntegerField(blank=True, null=True)),
                ('user_name', models.CharField(blank=True, max_length=255)),
                ('user_id', models.BigIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TrendSentiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pos_pol_count', models.IntegerField(null=True)),
                ('neg_pol_count', models.IntegerField(null=True)),
                ('neu_pol_count', models.IntegerField(null=True)),
                ('pos_sub_count', models.IntegerField(null=True)),
                ('neg_sub_count', models.IntegerField(null=True)),
                ('neu_sub_count', models.IntegerField(null=True)),
                ('calculated_upto', models.BigIntegerField(blank=True, null=True)),
                ('trend', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trendsentiment', to='core.trend')),
            ],
        ),
        migrations.AddField(
            model_name='trend',
            name='tweets',
            field=models.ManyToManyField(blank=True, related_name='trend', to='core.tweet'),
        ),
        migrations.AddField(
            model_name='trend',
            name='users',
            field=models.ManyToManyField(blank=True, related_name='trend', to=settings.AUTH_USER_MODEL),
        ),
    ]
